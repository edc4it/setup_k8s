---
- name: Get user's shell
  ansible.builtin.user:
    name: "{{ user }}"
  register:  user_info

- ansible.builtin.assert:
    that: shell_map[user_info.shell] is defined
    fail_msg: "shell not supported by role: {{ user_info.shell }}"

- set_fact:
    user_shell_file: "{{ shell_map[user_info.shell] }}"


- name: Ensure "{{ user_info.home }}/{{ user_shell_file }}" exists
  become: true
  become_user: "{{ user }}"
  block:
    - name: Check if "{{ user_info.home }}/{{ user_shell_file }}" exists
      ansible.builtin.stat:
        path: "{{ user_info.home }}/{{ user_shell_file }}"
      register: file_stat

    - name: Ensure "{{ user_info.home }}/{{ user_shell_file }}" exists as "{{ user }}"
      ansible.builtin.file:
        path: "{{ user_info.home }}/{{ user_shell_file }}"
        state: touch
      when: not file_stat.stat.exists
