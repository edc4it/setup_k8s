- name: create download directory
  ansible.builtin.file:
    state: directory
    mode: 'u=rwx,go=rx'
    dest: '{{ minikube_download_dir }}'

- name: download sha256sum
  ansible.builtin.get_url:
    url: '{{ minikube_mirror }}/{{ minikube_redis_filename }}.sha256'
    dest: '{{ minikube_download_dir }}/{{ minikube_download_filename }}.sha256'
    force: no
    use_proxy: yes
    validate_certs: yes
    mode: 'u=rw,go=r'

- name: read sha256sum
  ansible.builtin.slurp:
    src: '{{ minikube_download_dir }}/{{ minikube_download_filename }}.sha256'
  register: minikube_sha256sum

- name: download Minikube
  ansible.builtin.get_url:
    url: '{{ minikube_mirror }}/{{ minikube_redis_filename }}'
    dest: '{{ minikube_download_dir }}/{{ minikube_download_filename }}'
    checksum: 'sha256:{{ minikube_sha256sum.content | b64decode | trim }}'
    force: no
    use_proxy: yes
    validate_certs: yes
    mode: 'u=rw,go=r'

- name: create the Minikube installation dir
  become: true
  ansible.builtin.file:
    state: directory
    owner: root
    group: root
    mode: 'u=rwx,go=rx'
    dest: '{{ minikube_install_dir }}'

- name: install Minikube
  become: true
  ansible.builtin.copy:
    src: '{{ minikube_download_dir }}/{{ minikube_download_filename }}'
    remote_src: yes
    dest: '{{ minikube_install_path }}'
    force: yes
    owner: root
    group: root
    mode: 'u=rwx,go=rx'

- name: freeze k8s version
  ansible.builtin.command: minikube config set kubernetes-version {{ k8s_version }}
  when: k8s_version is defined
  tags:
    - molecule-idempotence-notest
  become_user: "{{ user }}"
